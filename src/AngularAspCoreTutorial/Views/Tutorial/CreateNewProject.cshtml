@{
    ViewData["Title"] = "Create New Project";
}

<h1>Crear Nuevo Proyecto</h1>

<p>
    Para este tutorial utilizaremos el template de Visual Studio "ASP.NET Core Web Application (.NET Framework)"
</p>
<p>
    Ir al menú <code>File->New Project</code>
</p>
<p>
    <a href="/images/newProject.png" target="_blank">
        <img src="/images/newProject.png" width="600" height="600" class="img-responsive" alt="Generic placeholder thumbnail">
    </a>
</p>
<p>
    Escribir el nombre deseado y asegurarnos que no tiene la casilla de Application Insights del lado derecho arriba (ya que no lo utilizaremos en este tutorial).
</p>
<p>
    Posteriormente, seleccionamos el Template "Web Application", y en "Change Authentication", seleccionamos "No Authentication".
</p>
<p>
    Más adelante en este tutorial, veremos como agregar autenticación a la aplicación y al Web API con Azure Active Directory.
</p>
<p>
    <a href="/images/selectTemplate.png" target="_blank">
        <img src="/images/selectTemplate.png" width="600" height="600" class="img-responsive" alt="Generic placeholder thumbnail">
    </a>
</p>
<h2>
    Ajuste del template
</h2>
<p>
    Este template es una Web Application funcional bajo el esquema MVC 6, sin embargo, en este tutorial vamos a crear una Single Page Application (SPA),
    por lo que necesitamos eliminar algunas cosas que no nos sirven y agregar otras.
</p>

<h3>Eliminación de archivos</h3>
<p>Se necesitan eliminar varios archivos que no van a ser utilizados en este projecto.</p>
<p>
    Eliminar:
    <code>
        <ul>
            <li>Eliminar las siguientes imagenes, pero conservar la carpeta "images"</li>
            <ul>
                <li>wwwroot/images/banner1.svg</li>
                <li>wwwroot/images/banner2.svg</li>
                <li>wwwroot/images/banner3.svg</li>
                <li>wwwroot/images/banner4.svg</li>
            </ul>
            <li>wwwroot/js/site.js</li>
            <li>wwwroot/_reference.js</li>
            <li>Views/Home/About.cshtml</li>
            <li>Views/Home/Contact.cshtml</li>
            <li>Shared/_Layout.cshtml</li>
            <li>Shared/Error.cshtml</li>
            <li>Views/_ViewImports.cshtml</li>
            <li>Views/_ViewStart.cshtml</li>
            <li>Project_Readme.shtml</li>
        </ul>
    </code>
</p>
<h3>Instalación de Grunt</h3>
<p>
    En este tutorial vamos a utilizar Grunt (Task Manager) para automatizar las tareas de limpieza de nuestros archivos javascript y css.
    Para esto necesitamos un archivo <code>package.json</code> que especifica las dependencias de npm que tiene nuestro proyecto.
</p>
<p>
    El archivo ya es parte del proyecto, pero por defecto no se muestra en nuestra solución, en la ventana de "Solution Explorer" dar click al botón "Show all files"
</p>
<p>
    <a href="/images/showAllFiles.png" target="_blank">
        <img src="/images/showAllFiles.png" width="600" height="600" class="img-responsive" alt="Generic placeholder thumbnail">
    </a>
</p>
<p>
    Reemplazar el contenido del archivo package.json por lo siguiente:
</p>
<p>
    <script src="https://gist.github.com/netor27/fcb77d3d083379ba25775bf4af0d4150.js"></script>
</p>
<p>
    Al guardar el archivo, la carpeta de dependencias se actualiza, pero es necesario restaruarlas. Para esto, damos click derecho a la carpeta <code>npm->Restore Packages</code>.
    Con esto pasamos a tener el proyecto de la siguiente manera:
</p>
<p>
    <a href="/images/restorePackages.png" target="_blank">
        <img src="/images/restorePackages.png" width="600" height="600" class="img-responsive" alt="Generic placeholder thumbnail">
    </a>
</p>
<p>
    Necesitamos crear las siguientes carpetas y archivos (vacíos, los llenaremos más adelante), que son utilizadas por Grunt. Todo esto es sobre la raíz del projecto <code>AngularAspTutorialWebApp</code>
    <code>
        <ul>
            <li>Carpeta AutogeneratedScripts/</li>
            <li>Carpeta Scripts/</li>
            <li>Carpeta Scripts/Controllers/</li>
            <li>Carpeta Scripts/Services/</li>
            <li>Carpeta wwwroot/app/</li>
            <li>Carpeta wwwroot/app/views</li>
            <li>Carpeta wwwroot/imagesmin/</li>
            <li>Carpeta Views/Css/</li>
            <li>Archivo Scripts/app.js</li>
            <li>Archivo Views/Css/site.css</li>
        </ul>
    </code>
</p>
<p>
    Después, eliminamos el archivo <code>gulpfile.js</code> y creamos un archivo <code>Gruntfile.js</code> con el siguiente contenido:
</p>
<p>
    <script src="https://gist.github.com/netor27/8e02899e17779f08a42d94105b92789a.js"></script>
</p>
<p>
    Para validar el correcto funcionamiento de Grunt, debemos de abrir la ventana de "Task Runner Explorer", en <code>Tools->Task Runner Explorer</code>.
    En esta ventana, nos aparecen las tareas que definimos en el archivo Gruntfile.js
</p>
<p>
    <a href="/images/taskRunnerExplorer.png" target="_blank">
        <img src="/images/taskRunnerExplorer.png" width="600" height="600" class="img-responsive" alt="Generic placeholder thumbnail">
    </a>
</p>
<p>
    Damos click derecho en <code>Alias Tasks->default->Run</code>, esto nos genera los archivos "minified" de javascript y de estilos. Nos aparece el siguiente output:
</p>
<p>
    <a href="/images/taskRunnerOutput.png" target="_blank">
        <img src="/images/taskRunnerOutput.png" width="600" height="600" class="img-responsive" alt="Generic placeholder thumbnail">
    </a>
</p>
<p>
    Modificamos el archivo <code>wwwroot/app/views/home.html</code> con el siguiente contenido:
</p>
<p>
    <script src="https://gist.github.com/netor27/b69cd50c986905b40ebb4006e43b23dd.js"></script>
</p>
<p>
    Modificamos el archivo <code>Controllers/HomeController.cs</code> con el siguiente contenido:
</p>
<p>
    <script src="https://gist.github.com/netor27/512591af40431d3577603443d94148a1.js"></script>
</p>
<p>
    Creamos el archivo <code>Scripts/Controllers/mainController.js</code> con el siguiente contenido:
</p>
<p>
    <script src="https://gist.github.com/netor27/5a37f700295d7c8ffc66e02f5cbf85ba.js"></script>
</p>
<p>
    Creamos el archivo <code>Scripts/app.js</code> con el siguiente contenido:
</p>
<p>
    <script src="https://gist.github.com/netor27/c178d95d9779695dcbc17eb7b69f9739.js"></script>
</p>
<p>
    Modificamos el archivo <code>Views/Home/Index.cshtml</code> con el siguiente contenido:
</p>
<p>
    <script src="https://gist.github.com/netor27/9e5d9d81f1ce958b51059162475b8b44.js"></script>
</p>
<h2>¡Terminamos!</h2>
<p>
    Compilamos la aplicación, y la inciamos con F5.
</p>
<p>
    Nuestro navegador por default nos debe de mostrar una pantalla como la siguiente. En dónde podemos probar que todo está correcto
</p>
<p>
    <a href="/images/angularWorks.png" target="_blank">
        <img src="/images/angularWorks.png" width="600" height="600" class="img-responsive" alt="Generic placeholder thumbnail">
    </a>
</p>